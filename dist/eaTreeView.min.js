/*!
 * angular-tree-view
 * https://github.com/engineer-andrew/Angular-Tree-View
 * Version: 1.0.0 - 2016-10-18T19:35:00.000Z
 * License: GPL-3.0
 */
angular.module("ea.treeview",[]),angular.module("ea.treeview").directive("eaTreeView",function(){return{controller:["$scope",function(e){this.isRoot=e.isRoot}],link:function(e){e.branchName=e.branchName||"items",e.callback=e.callback()},restrict:"E",scope:{branchName:"@",callback:"&",datasetId:"=",isRoot:"@",items:"="},template:'<ea-tree-view-item dataset-id="datasetId" item="item" branch-name="{{branchName}}" callback="callback" data-ng-repeat="item in items"></ea-tree-view-item>'}}),angular.module("ea.treeview").factory("eaTreeViewFactory",["$rootScope",function(e){var t={items:{}},a={bindEvent:function(t,i){t=t||"$stateChangeSuccess",e.$on(t,function(e,t){a.setActive(t.name,i)})},getItems:function(e){return e=e||"default",t.items[e]},setActive:function(e,i,n,c,r,m){i=i||"default",n=n||t.items[i],c=c||!1,r=r||0;for(var s=n.length;--s>=0;)n[s].items&&n[s].items.length?(c=a.setActive(e,i,n[s].items,c,r+1,m),c&&!m&&(n[s].expanded=!0,0===r&&(m=!0))):c?n[s].isActive=!1:n[s].stateName&&n[s].stateName===e?(n[s].isActive=!0,c=!0):n[s].isActive=!1;return c},setItems:function(e,a){a=a||"default",t.items[a]=e}};return a}]),angular.module("ea.treeview").directive("eaTreeViewItem",["eaTreeViewFactory",function(e){return{link:function(t,a,i,n){t.item.items=t.item[t.branchName],t.callback=t.callback(),t.activate=function(){e.setActive(t.item.stateName,t.datasetId),t.callback&&t.callback(t.item)},t.hasChildren=function(){return!!t.item.items&&!!t.item.items.length},t.hasParent=function(){return!n.isRoot},t.toggleExpanded=function(){t.item.expanded=!t.item.expanded}},require:"^eaTreeView",restrict:"E",scope:{branchName:"@",callback:"&",datasetId:"=",item:"="},templateUrl:"treeViewItem.html"}}]);